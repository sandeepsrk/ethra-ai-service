name: Deploy Ethra AI Service

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - closed
    branches:
      - master

concurrency:
  group: deploy-ethra-ai-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest
    environment: ethra-ai
    timeout-minutes: 20
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    env:
      GO_VERSION: 1.22.6
      APP_NAME: ethra-go
      TARGET_DIR: /opt/ethra-go
      PORT: 8080
      OPENAI_MODEL: gpt-4o-mini
      OPENAI_TIMEOUT: 120000
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Cache Go
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-${{ env.GO_VERSION }}-
      - name: Tidy modules
        run: go mod tidy
      - name: Test
        run: go test ./... -count=1 -v
      - name: Build
        run: |
          mkdir -p build
          go build -trimpath -ldflags='-s -w' -o build/${{ env.APP_NAME }} ./cmd/server
          ls -l build/${{ env.APP_NAME }}
      - name: Prepare remote dir
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p ${{ env.TARGET_DIR }}/releases
            sudo chown ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_USER }} ${{ env.TARGET_DIR }}
            ls -al ${{ env.TARGET_DIR }}
      - name: Upload binary
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: build/${{ env.APP_NAME }}
          target: ${{ env.TARGET_DIR }}/releases/
          strip_components: 1
      - name: Deploy & restart
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            RELEASE_FILE="${{ env.TARGET_DIR }}/releases/${{ env.APP_NAME }}"
            LIVE_FILE="${{ env.TARGET_DIR }}/${{ env.APP_NAME }}"
            sudo systemctl stop ethra-go || true
            chmod +x "$RELEASE_FILE"
            mv -f "$RELEASE_FILE" "$LIVE_FILE"
            {
              echo "PORT=${{ env.PORT }}";
              echo "OPENAI_API_KEY=${{ vars.OPENAI_API_KEY }}";
              echo "OPENAI_MODEL=${{ env.OPENAI_MODEL }}";
              echo "OPENAI_TIMEOUT=${{ env.OPENAI_TIMEOUT }}";
            } > ${{ env.TARGET_DIR }}/.env
            sudo chown ${{ secrets.SERVER_USER }}:${{ secrets.SERVER_USER }} ${{ env.TARGET_DIR }}/.env
            sudo systemctl daemon-reload
            sudo systemctl start ethra-go
            sudo systemctl status ethra-go --no-pager || (journalctl -u ethra-go -n 100 --no-pager; exit 1)
      - name: Summary
        if: always()
        run: echo "Deployment completed at $(date -u '+%Y-%m-%dT%H:%M:%SZ')"
