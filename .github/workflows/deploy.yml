name: Deploy Ethra AI Service

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - closed
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ethra-ai

    env:
      GO_VERSION: '1.22.6'
      APP_NAME: 'ethra-go'
      TARGET_DIR: '/root'
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      PORT: '3000'
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_MODEL: 'gpt-4o-mini'
      OPENAI_TIMEOUT: '120000'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build -o ${{ env.APP_NAME }} ./cmd/server

      # ✅ Step 1: Upload new binary
      - name: Upload binary to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          source: ${{ env.APP_NAME }}
          target: ${{ env.TARGET_DIR }}

      # ✅ Step 2: SSH into server to configure and restart app
      - name: Deploy app on server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            echo "Stopping old app..."
            sudo systemctl stop ethra-go || true

            echo "Writing .env file..."
            cat <<EOF > ${{ env.TARGET_DIR }}/.env
            PORT=${{ env.PORT }}
            OPENAI_API_KEY=${{ env.OPENAI_API_KEY }}
            OPENAI_MODEL=${{ env.OPENAI_MODEL }}
            OPENAI_TIMEOUT=${{ env.OPENAI_TIMEOUT }}
            EOF

            echo "Restarting app service..."
            sudo systemctl daemon-reload
            sudo systemctl start ethra-go
            sudo systemctl status ethra-go --no-pager || true

            echo "✅ Deployment complete."
